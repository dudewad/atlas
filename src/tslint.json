{
  "extends": [
    "../tslint.json"
  ],
  "defaultSeverity": "warn",
  "rules": {
    "adjacent-overload-signatures": true,
    "align": [
      true,
      "members",
      "parameters",
      "statements"
    ],
    "array-type": [
      true,
      "array-simple"
    ],
    "arrow-parens": [
      true,
      "ban-single-arg-parens"
    ],
    "arrow-return-shorthand": true,
    "await-promise": true,
    "ban": false,
    "ban-types": [
      true,
      [
        "Object",
        "Avoid using the `Object` type. Did you mean `object`?"
      ],
      [
        "Function",
        "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
      ],
      [
        "Boolean",
        "Avoid using the `Boolean` type. Did you mean `boolean`?"
      ],
      [
        "Number",
        "Avoid using the `Number` type. Did you mean `number`?"
      ],
      [
        "String",
        "Avoid using the `String` type. Did you mean `string`?"
      ],
      [
        "Symbol",
        "Avoid using the `Symbol` type. Did you mean `symbol`?"
      ]
    ],
    "binary-expression-operand-order": true,
    "callable-types": true,
    "class-name": true,
    "comment-format": [
      true,
      "check-space"
    ],
    "completed-docs": [
      true,
      {
        "functions": {
          "visibilities": [
            "exported"
          ]
        },
        "methods": {
          "locations": [
            "all"
          ],
          "privacies": [
            "public",
            "protected"
          ]
        }
      }
    ],
    "curly": [
      true,
      "ignore-same-line"
    ],
    "cyclomatic-complexity": [
      true
    ],
    "encoding": true,
    "eofline": true,
    "file-header": [
      false
    ],
    "forin": true,
    "import-blacklist": [
      true
    ],
    "import-spacing": true,
    "indent": [
      true,
      "spaces",
      2
    ],
    "interface-name": [
      true,
      "never-prefix"
    ],
    "interface-over-type-literal": true,
    "jsdoc-format": true,
    "label-position": true,
    "linebreak-style": [
      false,
      "LF"
    ],
    "match-default-export-name": [
      true
    ],
    "max-classes-per-file": [
      true,
      1
    ],
    "max-file-line-count": [
      true,
      499
    ],
    "max-line-length": [
      false
    ],
    // using ter-max-len because it has more options
    "member-access": [
      true,
      "check-accessor",
      "check-constructor"
    ],
    "member-ordering": [
      true,
      "static-before-instance",
      "variables-before-functions"
    ],
    "new-parens": true,
    "newline-before-return": true,
    "no-angle-bracket-type-assertion": true,
    "no-any": true,
    "no-arg": true,
    "no-bitwise": true,
    "no-boolean-literal-compare": false,
    "no-conditional-assignment": true,
    "no-consecutive-blank-lines": [
      true
    ],
    "no-console": [
      true,
      "debug",
      "info",
      "log",
      "time",
      "timeEnd",
      "trace"
    ],
    "no-construct": true,
    "no-debugger": true,
    "no-default-export": true,
    "no-duplicate-super": true,
    "no-duplicate-variable": [
      true,
      "check-parameters"
    ],
    "no-empty": true,
    "no-empty-interface": true,
    "no-eval": true,
    "no-floating-promises": [
      false
    ],
    "no-for-in-array": true,
    "no-import-side-effect": [
      false
    ],
    "no-inferrable-types": [
      true,
      "ignore-params"
    ],
    "no-inferred-empty-object-type": true,
    "no-internal-module": true,
    "no-invalid-template-strings": true,
    "no-invalid-this": false,
    "no-irregular-whitespace": true,
    "no-magic-numbers": [
      true,
      0,
      1,
      -1,
      10
    ],
    "no-mergeable-namespace": true,
    "no-misused-new": true,
    "no-namespace": true,
    "no-non-null-assertion": true,
    "no-null-keyword": true,
    "no-object-literal-type-assertion": true,
    "no-parameter-properties": false,
    "no-reference": true,
    "no-reference-import": true,
    "no-require-imports": true,
    "no-shadowed-variable": true,
    "no-sparse-arrays": true,
    "no-string-literal": false,
    // noImplicitAny compiler option prevents issues caused by this
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    "no-trailing-whitespace": true,
    "no-unbound-method": [
      true,
      "ignore-static"
    ],
    "no-unnecessary-callback-wrapper": true,
    "no-unnecessary-initializer": true,
    "no-unnecessary-qualifier": true,
    "no-unsafe-any": true,
    "no-unsafe-finally": true,
    "no-unused-expression": true,
    "no-use-before-declare": true,
    "no-var-keyword": true,
    "no-var-requires": true,
    "no-void-expression": [
      true,
      "ignore-arrow-function-shorthand"
    ],
    "number-literal-format": true,
    "object-literal-key-quotes": [
      true,
      "consistent-as-needed"
    ],
    "object-literal-shorthand": true,
    "object-literal-sort-keys": false,
    "one-line": [
      true,
      "check-catch",
      "check-else",
      "check-finally",
      "check-open-brace",
      "check-whitespace"
    ],
    "one-variable-per-declaration": [
      true,
      "ignore-for-loop"
    ],
    "only-arrow-functions": [
      true,
      "allow-declarations",
      "allow-named-functions"
    ],
    "ordered-imports": [
      true,
      {
        "import-sources-order": "case-insensitive",
        "named-imports-order": "case-insensitive"
      }
    ],
    "prefer-conditional-expression": true,
    "prefer-const": true,
    "prefer-for-of": true,
    "prefer-function-over-method": [
      false
    ],
    "prefer-method-signature": true,
    "prefer-object-spread": true,
    "prefer-switch": true,
    "prefer-template": [
      true,
      "allow-single-concat"
    ],
    "promise-function-async": true,
    "quotemark": [
      true,
      "single",
      "avoid-escape"
    ],
    "radix": true,
    "restrict-plus-operands": true,
    "return-undefined": false,
    "semicolon": [
      true,
      "always"
    ],
    "space-before-function-paren": [
      true,
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "constructor": "never",
        "method": "never",
        "named": "never"
      }
    ],
    "strict-boolean-expressions": false,
    "strict-type-predicates": true,
    "switch-default": false,
    "switch-final-break": [
      true,
      "always"
    ],
    "trailing-comma": [
      true,
      {
        "multiline": "always",
        "singleline": "never"
      }
    ],
    "triple-equals": [
      true,
      "allow-null-check"
    ],
    "typedef": [
      false
    ],
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      },
      {
        "call-signature": "onespace",
        "index-signature": "onespace",
        "parameter": "onespace",
        "property-declaration": "onespace",
        "variable-declaration": "onespace"
      }
    ],
    "unified-signatures": true,
    "use-default-type-parameter": true,
    "use-isnan": true,
    "variable-name": [
      true,
      "allow-leading-underscore",
      "allow-pascal-case",
      "ban-keywords",
      "check-format"
    ],
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-module",
      "check-separator",
      "check-type",
      "check-preblock"
    ],
    // ===== Codelyzer =====
    "angular-whitespace": [
      true,
      "check-interpolation"
    ],
    // todo:mm: add check-pipe options when fixed: https://github.com/mgechev/codelyzer/issues/346
    "banana-in-box": true,
    "component-class-suffix": true,
    "component-selector": [
      true,
      "element",
      "mc",
      "kebab-case"
    ],
    "directive-class-suffix": true,
    "directive-selector": [
      true,
      "attribute",
      "mc",
      "camelCase"
    ],
    "no-attribute-parameter-decorator": true,
    "no-forward-ref": true,
    "no-input-rename": true,
    "no-output-rename": true,
    "pipe-naming": [
      true,
      "camelCase",
      "mc"
    ],
    "no-unused-css": true,
    "pipe-impure": true,
    "templates-no-negated-async": true,
    "use-host-property-decorator": true,
    "use-input-property-decorator": true,
    "use-life-cycle-interface": true,
    "use-output-property-decorator": true,
    "use-pipe-transform-interface": true,
    "use-view-encapsulation": true,
    // ===== tslint-eslint-rules =====
    "no-constant-condition": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noConstantConditionRule.md
    "no-control-regex": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noControlRegexRule.md
    "no-duplicate-case": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noDuplicateCaseRule.md
    "no-empty-character-class": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noEmptyCharacterClassRule.md
    "no-ex-assign": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noExAssignRule.md
    "no-extra-boolean-cast": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noExtraBooleanCastRule.md
    "no-extra-semi": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noExtraSemiRule.md
    "no-inner-declarations": [
      true,
      "functions"
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noInnerDeclarationsRule.md
    "no-invalid-regexp": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noInvalidRegexpRule.md
    "no-regex-spaces": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noRegexSpacesRule.md
    "no-unexpected-multiline": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noUnexpectedMultilineRule.md
    "valid-jsdoc": [
      true,
      {
        // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/validJsdocRule.md
        "matchDescription": ".+",
        "prefer": {
          "return": "returns"
        },
        "requireParamType": false,
        "requireParamDescription": true,
        "requireReturn": false,
        "requireReturnType": false,
        "requireReturnDescription": true
      }
    ],
    "valid-typeof": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/validTypeofRule.md
    "no-multi-spaces": true,
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/noMultiSpacesRule.md
    "handle-callback-err": [
      true,
      "error"
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/handleCallbackErrRule.md
    "array-bracket-spacing": [
      // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/arrayBracketSpacingRule.md
      true,
      "never",
      {
        "arraysInArrays": true
      }
    ],
    "block-spacing": [
      true,
      "always"
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/blockSpacingRule.md
    // "brace-style": [true, "1tbs"], // using TSlint's instead // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/braceStyleRule.md
    // "ter-indent": [true, 2], // using TSLint's instead // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/terIndentRule.md
    "ter-max-len": [
      // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/terMaxLenRule.md
      true,
      {
        "code": 80,
        "tabWidth": 4,
        "ignoreUrls": true,
        // ignore the last line of multiline imports, e.g: } from 'some-module';
        // also ignores test cases with long descriptions, e.g. it('does something long') // although this could be avoided with multiline string literals if VSCode didn't have an annoying formatting bug
        "ignorePattern": "^}\\ from '|^\\s+it\\("
      }
    ],
    "object-curly-spacing": [
      true,
      "always"
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/objectCurlySpacingRule.md
    // "sort-imports": true, // using TSlint's instead // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/sortImportsRule.md
    "space-in-parens": [
      true,
      "never"
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/spaceInParensRule.md
    "ter-arrow-body-style": [
      true,
      "as-needed"
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/terArrowBodyStyleRule.md
    // "ter-arrow-parens": [true, "as-needed"], // using TSlint's instead // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/terArrowParensRule.md
    "ter-arrow-spacing": [
      true
    ],
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/terArrowSpacingRule.md
    "ter-func-call-spacing": [
      true,
      "never"
    ],
    "ter-prefer-arrow-callback": true
    // https://github.com/buzinas/tslint-eslint-rules/blob/master/src/docs/rules/terPreferArrowCallbackRule.md
  }
}
